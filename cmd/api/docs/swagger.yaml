basePath: /
definitions:
  handlers.GetAllCountriesResponse:
    properties:
      id:
        type: integer
      iso3166_2_a1:
        type: string
      iso3166_2_a3:
        type: string
      name:
        type: string
      official_state_name:
        type: string
      tld:
        type: string
    type: object
  handlers.InsertCountryRequest:
    properties:
      iso3166_2_a1:
        type: string
      iso3166_2_a3:
        type: string
      name:
        type: string
      official_state_name:
        type: string
      tld:
        type: string
    type: object
  handlers.LanguageTagBody:
    properties:
      iso_639_1:
        type: string
      iso_639_2:
        type: string
      name:
        type: string
    type: object
  handlers.LanguageTagGetAllResponse:
    properties:
      id:
        type: integer
      iso_639_1:
        type: string
      iso_639_2:
        type: string
      name:
        type: string
      variants_count:
        type: integer
    type: object
  handlers.LanguageTagResponse:
    properties:
      id:
        type: integer
      iso_639_1:
        type: string
      iso_639_2:
        type: string
      name:
        type: string
    type: object
  handlers.LanguageTagVariantsRequest:
    properties:
      country_id:
        type: integer
      description:
        type: string
      language_id:
        type: integer
      variant_tag:
        type: string
    type: object
  handlers.LanguageTagVariantsResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      language_tag_id:
        type: integer
      variant_tag:
        type: string
    type: object
  handlers.PaginatedVariantsResponse:
    properties:
      next_page_token:
        type: string
      variants:
        items:
          $ref: '#/definitions/handlers.LanguageTagVariantsResponse'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for UURL Admin service.
  title: UURL Admin API
  version: "1.0"
paths:
  /country:
    get:
      consumes:
      - application/json
      description: Retrieves a list of countries filtered by language IDs
      parameters:
      - collectionFormat: csv
        description: Filter by language IDs
        in: query
        items:
          type: integer
        name: language_ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.GetAllCountriesResponse'
            type: array
        "400":
          description: Invalid language_ids parameter
          schema:
            type: string
        "500":
          description: Failed to get countries
          schema:
            type: string
      summary: Get filtered countries
      tags:
      - Country
    post:
      consumes:
      - application/json
      description: Creates a new country with the provided information
      parameters:
      - description: Country Data
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/handlers.InsertCountryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.GetAllCountriesResponse'
        "400":
          description: Invalid input
          schema:
            type: string
      summary: Create a new country
      tags:
      - Country
  /country/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a country by the provided ID
      parameters:
      - description: Country ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetAllCountriesResponse'
        "400":
          description: Invalid item ID
          schema:
            type: string
      summary: Get country by ID
      tags:
      - Country
  /language:
    get:
      description: Retrieve all language tags with their associated variants
      produces:
      - application/json
      responses:
        "200":
          description: List of Language Tags with variants
          schema:
            items:
              $ref: '#/definitions/handlers.LanguageTagGetAllResponse'
            type: array
        "500":
          description: Failed to get language tags
          schema:
            type: string
      summary: Get all language tags
      tags:
      - Language tags
    post:
      consumes:
      - application/json
      description: Insert a new language tag and its associated variants
      parameters:
      - description: Language Tag with Variants
        in: body
        name: languageTag
        required: true
        schema:
          $ref: '#/definitions/handlers.LanguageTagBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created Language Tag with variants
          schema:
            $ref: '#/definitions/handlers.LanguageTagResponse'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Failed to insert language tag or variants
          schema:
            type: string
      summary: Create a new language tag
      tags:
      - Language tags
  /language-variant:
    get:
      consumes:
      - application/json
      description: Get a list of language tag variants with pagination
      parameters:
      - description: Language Tag ID
        in: query
        name: languageTagId
        type: integer
      - default: 10
        description: Limit of items per page
        in: query
        name: page_size
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: page_token
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.PaginatedVariantsResponse'
        "400":
          description: Invalid languageTagId or page_token
          schema:
            type: string
        "500":
          description: Database query error
          schema:
            type: string
      summary: Get paginated language tag variants
      tags:
      - Language variants
    post:
      consumes:
      - application/json
      description: Create a new language tag variant
      parameters:
      - description: Language Tag Variant
        in: body
        name: variant
        required: true
        schema:
          items:
            $ref: '#/definitions/handlers.LanguageTagVariantsRequest'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/handlers.LanguageTagVariantsResponse'
            type: array
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Database query error
          schema:
            type: string
      summary: Create a new language tag variant
      tags:
      - Language variants
  /language-variant/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing language tag variant
      parameters:
      - description: Variant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Language Tag Variant
        in: body
        name: variant
        required: true
        schema:
          $ref: '#/definitions/handlers.LanguageTagVariantsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LanguageTagVariantsResponse'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "404":
          description: Variant not found
          schema:
            type: string
        "500":
          description: Database query error
          schema:
            type: string
      summary: Update an existing language tag variant
      tags:
      - Language variants
  /language/{id}:
    get:
      description: Retrieve a specific language tag and its variants by ID
      parameters:
      - description: Language Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Language Tag with variants
          schema:
            $ref: '#/definitions/handlers.LanguageTagResponse'
        "404":
          description: Language tag not found
          schema:
            type: string
        "500":
          description: Failed to get variants
          schema:
            type: string
      summary: Get language tag by ID
      tags:
      - Language tags
swagger: "2.0"
